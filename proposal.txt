Group name:          WitzigSMathewJ
Group members:   Sarah Witzig, Joseph Mathew

Introduction
Personal finance trackers are incredibly useful tools that allow users to gain greater insight into their finances. Account aggregators such as Mint, You Need a Budget, and Empower allow users to see all their financial information in one place. Our goal is to provide users with a financial tracker in which they can connect with family members, conduct transactions, and monitor their net worth, loans, and investments.

Database Textual Description
Users can sign up for our personal finance tracker by providing an email, first, and last name. A user can have 0 to many tracked accounts. A tracked account has exactly one type, such as checkings, savings, loan, or investments. Our tracker does not support shared accounts; each account is owned by exactly 1 person.

Users have the option to form “families” within our app. Each family has a unique id and a family name. Families can contain 1 to many users, and a user can be in 0 to 1 families.

An account can contain 0 to many investments. An investment is an entity a user can invest in (buying) or can sell. Investments are tracked by a unique symbol. Investments represent a company, are characterized in an industry, and have a daily value in USD. For the scope of this project, only investments on the New York Stock Exchange will be considered.

A user can execute 0 to many transactions within an account. A transaction has a unique transaction id, a transaction date, and number of shares. Transactions have exactly one investment associated with them.

Users can set goals which will be tracked by our personal finance tracker. A user can set 0 to many goals, and a goal is associated with exactly 1 account. A goal has a unique ID, a name, and an amount, which can be negative, 0, or positive.



User interaction
Upon launching the application, users are greeted with a main menu. Users can select from a list of existing profiles, or create a new user profile.

Once a user profile is selected, the user is taken to their dashboard which provides summaries of their various accounts. From here, users can delve deeper into specific areas of their finances.

Beyond simply viewing summaries of their accounts on their dashboard, users can add new accounts, or close existing ones. For investment accounts, users can view their current holdings, see the market performance of individual investments, and make buy or sell transactions based on real-time market data fetched using the yfinance Python library.

The transaction history for all accounts is readily accessible, allowing users to track their financial activities, view details of each transaction, and ensure accuracy in their financial records. Users can also initiate deposit or withdrawal transactions, effectively managing their funds across different accounts.

Additionally, the application allows users to set and track financial goals. Users can create new goals, specifying the target amount and the account(s) linked to each goal. The application provides feedback on the progress of each goal, helping users stay on track with their financial objectives.

Users can also create families or join families. After joining a family, users will be able to view all the transaction information and current holdings of ALL accounts associated with every user within that family. Family members cannot execute transactions within accounts which are not their own.

Ultimately, the application aims to empower users to take control of their finances, make informed decisions, and achieve their financial goals.


Project Rationale
Personal finance is a universally valuable topic. Our personal finances drive our decisions, from the smallest questions: “should I buy a coffee every morning” to the more consequential ones: “should we move to another country for this job opportunity?” Joseph comes from an undergrad background in Economics, and Sarah has been known to give her co-ops presentations on the importance of opening Roth IRA accounts. We both have found that our interest in personal finance has opened up opportunities, given us better data for making decisions, and increased our quality of life.

From a data perspective, personal finance provides a wealth of insights. There is daily fluctuation in investment values, net worth information scattered across a variety of account providers, and transactions to monitor. Overall this project will tie into a passion which we both share, and let us see firsthand how to create a personal finance aggregator.

Database Language 
We will be using Python as our primary programming language. The application will be a command-line interface (CLI), providing users with a simple yet effective way to interact with their financial data.

For the database management system, MySQL will be utilized to store user data, account information, investment details, transaction records, and financial goals. 

To connect the Python application to the MySQL database, we will be utilizing PyMySQL, a Python-based MySQL database connector library for Python.

For fetching real-time market data, the yfinance Python library will be integrated into the application - yfinance will enable users to make more informed financial decisions based on up-to-date data.

The application should be compatible with any operating system that supports Python and MySQL. Beyond this, there are no known machine restrictions for the application.

(If using Django)
We will be using Python as our primary programming language.  For the application, we will leverage Django, a Python web framework, to aid in the overall structure of the application and provide a clean and maintainable codebase.

For the database management system, MySQL will be utilized to store user data, account information, investment details, transaction records, and financial goals. 

PyMySQL will be used as the database adapter between Django and MySQL, ensuring proper data exchange between the application and the database. For fetching real-time market data, the yfinance Python library will be integrated into the application. yfinance will enable users to make more informed financial decisions based on up-to-date data, directly from the web interface. 

The application should be compatible with any operating system that supports Python, Django, and MySQL. Beyond this, there are no known machine restrictions for the application.

UML Diagram

UML Activity Design 
